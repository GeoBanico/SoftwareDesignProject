// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftwareDesign_Project_QueenAnneCuriosityShop;

namespace SoftwareDesign_Project_QueenAnneCuriosityShop.Migrations
{
    [DbContext(typeof(CuriosityContext))]
    [Migration("20210531071301_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.BoughtStatus", b =>
                {
                    b.Property<int>("BoughtStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("BoughtStatusId");

                    b.ToTable("BoughtStatuses");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecruitmentDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.InsuranceType", b =>
                {
                    b.Property<int>("InsuranceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InsuranceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("InsuranceTypeId");

                    b.ToTable("InsuranceTypes");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Insurer", b =>
                {
                    b.Property<int>("InsurerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InsurerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("InsurerId");

                    b.ToTable("Insurers");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Online", b =>
                {
                    b.Property<int>("OnlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BoughtStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBought")
                        .HasColumnType("datetime2");

                    b.Property<int>("OnlineStoreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("OnlineId");

                    b.HasIndex("BoughtStatusId");

                    b.HasIndex("OnlineStoreId");

                    b.ToTable("Onlines");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.OnlineStore", b =>
                {
                    b.Property<int>("OnlineStoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OnlineStoreId");

                    b.ToTable("OnlineStores");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessType")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonLinkPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZIP")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.HasIndex("PersonLinkPersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.ReceivedStatus", b =>
                {
                    b.Property<int>("ReceivedStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArivalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.HasKey("ReceivedStatusId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ReceivedStatuses");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.SaleUnit", b =>
                {
                    b.Property<int>("SaleUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaleQuantity")
                        .HasColumnType("int");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("SaleUnitId");

                    b.HasIndex("PersonId");

                    b.HasIndex("UnitId");

                    b.ToTable("SaleUnits");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoughtStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedStatusId")
                        .HasColumnType("int");

                    b.Property<float>("ShipmentCost")
                        .HasColumnType("real");

                    b.Property<int>("ShipmentInsuranceId")
                        .HasColumnType("int");

                    b.Property<int>("ShipperId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ShipmentId");

                    b.HasIndex("BoughtStatusId");

                    b.HasIndex("CityId");

                    b.HasIndex("ShipmentInsuranceId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("VendorId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.ShipmentInsurance", b =>
                {
                    b.Property<int>("ShipmentInsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateInsured")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsuranceTypeId")
                        .HasColumnType("int");

                    b.Property<float>("InsuranceValue")
                        .HasColumnType("real");

                    b.Property<int>("InsurerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ShipmentInsuranceId");

                    b.HasIndex("InsuranceTypeId");

                    b.HasIndex("InsurerId");

                    b.ToTable("ShipmentInsurances");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Shipper", b =>
                {
                    b.Property<int>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ShipperContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipperId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.StoreBought", b =>
                {
                    b.Property<int>("StoreBoughtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoughtStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBought")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreCityId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("StoreBoughtId");

                    b.HasIndex("BoughtStatusId");

                    b.HasIndex("StoreCityId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreBoughts");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.StoreCity", b =>
                {
                    b.Property<int>("StoreCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreCityId");

                    b.ToTable("StoreCities");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoughtStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<int>("UnitQuantity")
                        .HasColumnType("int");

                    b.HasKey("UnitId");

                    b.HasIndex("BoughtStatusId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyFName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VendorId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Employee", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Person", "PersonLink")
                        .WithOne("EmployeeLink")
                        .HasForeignKey("SoftwareDesign_Project_QueenAnneCuriosityShop.Employee", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Online", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.BoughtStatus", "BoughtStatusLink")
                        .WithMany("OnlineList")
                        .HasForeignKey("BoughtStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.OnlineStore", "OnlineStoreLink")
                        .WithMany("OnlineList")
                        .HasForeignKey("OnlineStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoughtStatusLink");

                    b.Navigation("OnlineStoreLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Person", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Person", "PersonLink")
                        .WithMany("PersonList")
                        .HasForeignKey("PersonLinkPersonId");

                    b.Navigation("PersonLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.ReceivedStatus", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Employee", "EmployeeLink")
                        .WithMany("ReceivedStatusList")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Shipment", "ShipmentLink")
                        .WithOne("ReceivedStatusLink")
                        .HasForeignKey("SoftwareDesign_Project_QueenAnneCuriosityShop.ReceivedStatus", "ReceivedStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeLink");

                    b.Navigation("ShipmentLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.SaleUnit", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Person", "PersonLink")
                        .WithMany("SaleItemList")
                        .HasForeignKey("PersonId");

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Unit", "UnitLink")
                        .WithMany("SaleUnitList")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonLink");

                    b.Navigation("UnitLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Shipment", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.BoughtStatus", "BoughtStatusLink")
                        .WithMany("ShipmentList")
                        .HasForeignKey("BoughtStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.City", "CityLink")
                        .WithMany("OriginList")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.ShipmentInsurance", "ShipmentInsuranceLink")
                        .WithMany("ShipmentLink")
                        .HasForeignKey("ShipmentInsuranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Shipper", "ShipmentLink")
                        .WithMany("ShipmentList")
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Vendor", "VendorLink")
                        .WithMany("OriginList")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoughtStatusLink");

                    b.Navigation("CityLink");

                    b.Navigation("ShipmentInsuranceLink");

                    b.Navigation("ShipmentLink");

                    b.Navigation("VendorLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.ShipmentInsurance", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.InsuranceType", "InsuranceTypeLink")
                        .WithMany("ShipmentInsuranceList")
                        .HasForeignKey("InsuranceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Insurer", "InsurerLink")
                        .WithMany("ShipmentInsuranceList")
                        .HasForeignKey("InsurerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceTypeLink");

                    b.Navigation("InsurerLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.StoreBought", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.BoughtStatus", "BoughtStatusLink")
                        .WithMany("StoreBoughtList")
                        .HasForeignKey("BoughtStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.StoreCity", "StoreCityLink")
                        .WithMany("StoreBoughtList")
                        .HasForeignKey("StoreCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Store", "StoreLink")
                        .WithMany("StoreBoughtList")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoughtStatusLink");

                    b.Navigation("StoreCityLink");

                    b.Navigation("StoreLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Unit", b =>
                {
                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.BoughtStatus", "BoughtStatusLink")
                        .WithMany("UnitList")
                        .HasForeignKey("BoughtStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign_Project_QueenAnneCuriosityShop.Category", "CategoryLink")
                        .WithMany("UnitLink")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoughtStatusLink");

                    b.Navigation("CategoryLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.BoughtStatus", b =>
                {
                    b.Navigation("OnlineList");

                    b.Navigation("ShipmentList");

                    b.Navigation("StoreBoughtList");

                    b.Navigation("UnitList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Category", b =>
                {
                    b.Navigation("UnitLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.City", b =>
                {
                    b.Navigation("OriginList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Employee", b =>
                {
                    b.Navigation("ReceivedStatusList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.InsuranceType", b =>
                {
                    b.Navigation("ShipmentInsuranceList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Insurer", b =>
                {
                    b.Navigation("ShipmentInsuranceList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.OnlineStore", b =>
                {
                    b.Navigation("OnlineList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Person", b =>
                {
                    b.Navigation("EmployeeLink");

                    b.Navigation("PersonList");

                    b.Navigation("SaleItemList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Shipment", b =>
                {
                    b.Navigation("ReceivedStatusLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.ShipmentInsurance", b =>
                {
                    b.Navigation("ShipmentLink");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Shipper", b =>
                {
                    b.Navigation("ShipmentList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Store", b =>
                {
                    b.Navigation("StoreBoughtList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.StoreCity", b =>
                {
                    b.Navigation("StoreBoughtList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Unit", b =>
                {
                    b.Navigation("SaleUnitList");
                });

            modelBuilder.Entity("SoftwareDesign_Project_QueenAnneCuriosityShop.Vendor", b =>
                {
                    b.Navigation("OriginList");
                });
#pragma warning restore 612, 618
        }
    }
}
